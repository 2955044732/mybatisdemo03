<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--接口的地址com开始到接口名UserMapper-->
<mapper namespace="com.qwh.mybatis.mapper.DynamicSQLMapper">

    <!--sql语句-->
<!--    List<Emp> getEmpByCondition(Emp emp);-->
<select id="getEmpByConditionOne" resultType="Emp">
    select * from t_emp where 1=1
    <if test="empName != null and empName != ''">
            emp_name = #{empName}
    </if>
    <if test="age != null and age != ''">
        age=#{age}
    </if>
    <if test="sex != null and sex != ''">
        sex=#{sex}
    </if>
    <if test="email!= null and email != ''">
        email=#{email}
    </if>

</select>
<!--    ************************************************************-->
<!--    List<Emp> getEmpByCondition(Emp emp);-->
<!--    当条件不满足时可以去掉前面的and 但是无法去除后面的的and-->
<select id="getEmpByConditionTwe" resultType="Emp">
    select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
               age=#{age} and
            </if>
            <if test="sex != null and sex != ''">
                sex=#{sex} and
            </if>
            <if test="email!= null and email != ''">
               email=#{email}
            </if>
        </where>
</select>
<!--    ************************************************************-->
<!--    List<Emp> getEmpByCondition(Emp emp);-->
        <!--
            trim用于去掉或添加标签中的内容
            常用属性：
            prefix：在trim标签中的内容的前面添加某些内容
            prefixOverrides：在trim标签中的内容的前面去掉某些内容
            suffix：在trim标签中的内容的后面添加某些内容
            suffixOverrides：在trim标签中的内容的后面去掉某些内容
         -->
<select id="getEmpByCondition" resultType="Emp">
    select * from t_emp
        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
               age=#{age} or
            </if>
            <if test="sex != null and sex != ''">
                sex=#{sex} and
            </if>
            <if test="email!= null and email != ''">
               email=#{email}
            </if>
        </trim>
</select>
<!--    ******************************************-->
<!--    List<Emp> getEmpChoose(Emp emp);-->
<select id="getEmpChoose" resultType="Emp">
    select * from t_emp
    <where>
        <choose>
            <when test="empName != null and empName != ''">
                empNname = #{empName}
            </when>
            <when test="age != null and age != ''">
                age=#{age}
            </when>
            <when test="sex != null and sex != ''">
                sex=#{sex}
            </when>
            <when test="email!= null and email != ''">
                email=#{email}
            </when>
            <otherwise>
                did = 1
            </otherwise>
        </choose>
    </where>
</select>
<!--    **********************************************-->
<!--    int deleteMoreArray(@Param("eids") Emp []eids);-->
<delete id="deleteMoreArray">
<!--    delete from t_emp where-->
<!--    <foreach collection="eids" item="eid" separator="or">-->
<!--        eid = #{eid}-->
<!--    </foreach>-->
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" open="(" close=")" separator=",">
            eid = #{eid}
        </foreach>
</delete>
<!--    ********************************************-->
<!--    int insertMoreByList(@Param("emps") List<Emp> emps);-->
<insert id="insertMoreByList">
    insert into t_emp values
    <foreach collection="emps" item="emp" separator=",">
        (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
    </foreach>
</insert>
</mapper>
